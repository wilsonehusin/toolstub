#!/usr/bin/env bash

# Code generated by go.husin.dev/toolstub@(devel). DO NOT EDIT.
# toolstub -tool github.com/golangci/golangci-lint/cmd/golangci-lint

set -euo pipefail

# 0. Set variables and fallback to defaults.

default_exe="golangci-lint"
default_toolimport="github.com/golangci/golangci-lint/cmd/golangci-lint"
default_dir="$( dirname -- "${BASH_SOURCE[0]}" )/_tools"

EXE=${EXE:-${default_exe}}
TOOLIMPORT=${TOOLIMPORT:-${default_toolimport}}
DIR=${DIR:-${default_dir}}

modfile=$(realpath "${DIR}")/"${EXE}.go.mod"

# 1. Create go.mod if it doesn't already exist.
function gomod() {
  if [[ ! -f "${modfile}" ]]; then
    mkdir -p "${DIR}"
    go mod init -modfile="${modfile}" _
  fi
}

# 2. Install if necessary.
function install_tool() {
  if ! grep -q "${TOOLIMPORT}" "${modfile}"; then
    go get -modfile="${modfile}" -tool "${TOOLIMPORT}"
    go mod tidy -modfile="${modfile}"
  fi
}

# 3. Run!
function run() {
  # shellcheck disable=SC2068 # Intentionally splat args from user / console.
  go tool -modfile="${modfile}" "${TOOLIMPORT}" $@
}

function main() {
  DEBUG_TOOLSTUB=${DEBUG_TOOLSTUB:-""}
  if [[ -n "${DEBUG_TOOLSTUB}" ]]; then
    yellow=$(tput setaf 3)
    magenta=$(tput setaf 5)
    cyan=$(tput setaf 6)
    bold=$(tput bold)
    reset=$(tput sgr0)
    PS4='${bold}${cyan}toolstub[$(basename $0)]${reset}${magenta}:$(printf %03d $LINENO)${reset}${yellow}@${bold}$FUNCNAME${reset} '
    set -x
  fi
  
  gomod
  install_tool
  # shellcheck disable=SC2068 # Intentionally splat args from user / console.
  run $@
}

# shellcheck disable=SC2068 # Intentionally splat args from user / console.
main $@
